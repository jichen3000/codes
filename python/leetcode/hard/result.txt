Running tests:

('mv,nv,mi,ni', 1, 1, 5, 3)
('k[5][3]=max(1+k[4][2] (1),k[5][3] (1))', 1)
('mv,nv,mi,ni', 1, 1, 5, 2)
('k[5][2]=max(1+k[4][1] (1),k[5][2] (1))', 1)
('mv,nv,mi,ni', 1, 1, 5, 1)
('k[5][1]=max(1+k[4][0] (1),k[5][1] (1))', 1)
('mv,nv,mi,ni', 1, 1, 5, 0)
('mv,nv,mi,ni', 1, 1, 4, 3)
('k[4][3]=max(1+k[3][2] (1),k[4][3] (1))', 1)
('mv,nv,mi,ni', 1, 1, 4, 2)
('k[4][2]=max(1+k[3][1] (1),k[4][2] (1))', 1)
('mv,nv,mi,ni', 1, 1, 4, 1)
('k[4][1]=max(1+k[3][0] (1),k[4][1] (1))', 1)
('mv,nv,mi,ni', 1, 1, 4, 0)
('mv,nv,mi,ni', 1, 1, 3, 3)
('k[3][3]=max(1+k[2][2] (1),k[3][3] (1))', 1)
('mv,nv,mi,ni', 1, 1, 3, 2)
('k[3][2]=max(1+k[2][1] (1),k[3][2] (1))', 1)
('mv,nv,mi,ni', 1, 1, 3, 1)
('k[3][1]=max(1+k[2][0] (1),k[3][1] (1))', 1)
('mv,nv,mi,ni', 1, 1, 3, 0)
('mv,nv,mi,ni', 1, 1, 2, 3)
('k[2][3]=max(1+k[1][2] (1),k[2][3] (1))', 1)
('mv,nv,mi,ni', 1, 1, 2, 2)
('k[2][2]=max(1+k[1][1] (1),k[2][2] (1))', 1)
('mv,nv,mi,ni', 1, 1, 2, 1)
('k[2][1]=max(1+k[1][0] (1),k[2][1] (1))', 1)
('mv,nv,mi,ni', 1, 1, 2, 0)
('mv,nv,mi,ni', 1, 1, 1, 3)
('k[1][3]=max(1+k[0][2] (1),k[1][3] (1))', 1)
('mv,nv,mi,ni', 1, 1, 1, 2)
('k[1][2]=max(1+k[0][1] (1),k[1][2] (1))', 1)
('mv,nv,mi,ni', 1, 1, 1, 1)
('k[1][1]=max(1+k[0][0] (1),k[1][1] (1))', 1)
('mv,nv,mi,ni', 1, 1, 1, 0)
('mv,nv,mi,ni', 1, 1, 0, 3)
('mv,nv,mi,ni', 1, 1, 0, 2)
('mv,nv,mi,ni', 1, 1, 0, 1)
('mv,nv,mi,ni', 1, 1, 0, 0)
('mv,nv,mi,ni', 3, 1, 5, 3)
('k[5][3]=max(1+k[2][2] (2),k[5][3] (2))', 2)
('mv,nv,mi,ni', 3, 1, 5, 2)
('k[5][2]=max(1+k[2][1] (2),k[5][2] (2))', 2)
('mv,nv,mi,ni', 3, 1, 5, 1)
('k[5][1]=max(1+k[2][0] (1),k[5][1] (1))', 1)
('mv,nv,mi,ni', 3, 1, 5, 0)
('mv,nv,mi,ni', 3, 1, 4, 3)
('k[4][3]=max(1+k[1][2] (2),k[4][3] (2))', 2)
('mv,nv,mi,ni', 3, 1, 4, 2)
('k[4][2]=max(1+k[1][1] (2),k[4][2] (2))', 2)
('mv,nv,mi,ni', 3, 1, 4, 1)
('k[4][1]=max(1+k[1][0] (1),k[4][1] (1))', 1)
('mv,nv,mi,ni', 3, 1, 4, 0)
('mv,nv,mi,ni', 3, 1, 3, 3)
('k[3][3]=max(1+k[0][2] (1),k[3][3] (1))', 1)
('mv,nv,mi,ni', 3, 1, 3, 2)
('k[3][2]=max(1+k[0][1] (1),k[3][2] (1))', 1)
('mv,nv,mi,ni', 3, 1, 3, 1)
('k[3][1]=max(1+k[0][0] (1),k[3][1] (1))', 1)
('mv,nv,mi,ni', 3, 1, 3, 0)
('mv,nv,mi,ni', 3, 1, 2, 3)
('mv,nv,mi,ni', 3, 1, 2, 2)
('mv,nv,mi,ni', 3, 1, 2, 1)
('mv,nv,mi,ni', 3, 1, 2, 0)
('mv,nv,mi,ni', 3, 1, 1, 3)
('mv,nv,mi,ni', 3, 1, 1, 2)
('mv,nv,mi,ni', 3, 1, 1, 1)
('mv,nv,mi,ni', 3, 1, 1, 0)
('mv,nv,mi,ni', 3, 1, 0, 3)
('mv,nv,mi,ni', 3, 1, 0, 2)
('mv,nv,mi,ni', 3, 1, 0, 1)
('mv,nv,mi,ni', 3, 1, 0, 0)
('mv,nv,mi,ni', 2, 3, 5, 3)
('k[5][3]=max(1+k[3][0] (1),k[5][3] (2))', 2)
('mv,nv,mi,ni', 2, 3, 5, 2)
('mv,nv,mi,ni', 2, 3, 5, 1)
('mv,nv,mi,ni', 2, 3, 5, 0)
('mv,nv,mi,ni', 2, 3, 4, 3)
('k[4][3]=max(1+k[2][0] (1),k[4][3] (2))', 2)
('mv,nv,mi,ni', 2, 3, 4, 2)
('mv,nv,mi,ni', 2, 3, 4, 1)
('mv,nv,mi,ni', 2, 3, 4, 0)
('mv,nv,mi,ni', 2, 3, 3, 3)
('k[3][3]=max(1+k[1][0] (1),k[3][3] (1))', 1)
('mv,nv,mi,ni', 2, 3, 3, 2)
('mv,nv,mi,ni', 2, 3, 3, 1)
('mv,nv,mi,ni', 2, 3, 3, 0)
('mv,nv,mi,ni', 2, 3, 2, 3)
('k[2][3]=max(1+k[0][0] (1),k[2][3] (1))', 1)
('mv,nv,mi,ni', 2, 3, 2, 2)
('mv,nv,mi,ni', 2, 3, 2, 1)
('mv,nv,mi,ni', 2, 3, 2, 0)
('mv,nv,mi,ni', 2, 3, 1, 3)
('mv,nv,mi,ni', 2, 3, 1, 2)
('mv,nv,mi,ni', 2, 3, 1, 1)
('mv,nv,mi,ni', 2, 3, 1, 0)
('mv,nv,mi,ni', 2, 3, 0, 3)
('mv,nv,mi,ni', 2, 3, 0, 2)
('mv,nv,mi,ni', 2, 3, 0, 1)
('mv,nv,mi,ni', 2, 3, 0, 0)
('mv,nv,mi,ni', 0, 1, 5, 3)
('k[5][3]=max(1+k[5][2] (3),k[5][3] (3))', 3)
('mv,nv,mi,ni', 0, 1, 5, 2)
('k[5][2]=max(1+k[5][1] (2),k[5][2] (2))', 2)
('mv,nv,mi,ni', 0, 1, 5, 1)
('k[5][1]=max(1+k[5][0] (1),k[5][1] (1))', 1)
('mv,nv,mi,ni', 0, 1, 5, 0)
('mv,nv,mi,ni', 0, 1, 4, 3)
('k[4][3]=max(1+k[4][2] (3),k[4][3] (3))', 3)
('mv,nv,mi,ni', 0, 1, 4, 2)
('k[4][2]=max(1+k[4][1] (2),k[4][2] (2))', 2)
('mv,nv,mi,ni', 0, 1, 4, 1)
('k[4][1]=max(1+k[4][0] (1),k[4][1] (1))', 1)
('mv,nv,mi,ni', 0, 1, 4, 0)
('mv,nv,mi,ni', 0, 1, 3, 3)
('k[3][3]=max(1+k[3][2] (2),k[3][3] (2))', 2)
('mv,nv,mi,ni', 0, 1, 3, 2)
('k[3][2]=max(1+k[3][1] (2),k[3][2] (2))', 2)
('mv,nv,mi,ni', 0, 1, 3, 1)
('k[3][1]=max(1+k[3][0] (1),k[3][1] (1))', 1)
('mv,nv,mi,ni', 0, 1, 3, 0)
('mv,nv,mi,ni', 0, 1, 2, 3)
('k[2][3]=max(1+k[2][2] (2),k[2][3] (2))', 2)
('mv,nv,mi,ni', 0, 1, 2, 2)
('k[2][2]=max(1+k[2][1] (2),k[2][2] (2))', 2)
('mv,nv,mi,ni', 0, 1, 2, 1)
('k[2][1]=max(1+k[2][0] (1),k[2][1] (1))', 1)
('mv,nv,mi,ni', 0, 1, 2, 0)
('mv,nv,mi,ni', 0, 1, 1, 3)
('k[1][3]=max(1+k[1][2] (2),k[1][3] (2))', 2)
('mv,nv,mi,ni', 0, 1, 1, 2)
('k[1][2]=max(1+k[1][1] (2),k[1][2] (2))', 2)
('mv,nv,mi,ni', 0, 1, 1, 1)
('k[1][1]=max(1+k[1][0] (1),k[1][1] (1))', 1)
('mv,nv,mi,ni', 0, 1, 1, 0)
('mv,nv,mi,ni', 0, 1, 0, 3)
('k[0][3]=max(1+k[0][2] (1),k[0][3] (1))', 1)
('mv,nv,mi,ni', 0, 1, 0, 2)
('k[0][2]=max(1+k[0][1] (1),k[0][2] (1))', 1)
('mv,nv,mi,ni', 0, 1, 0, 1)
('k[0][1]=max(1+k[0][0] (1),k[0][1] (1))', 1)
('mv,nv,mi,ni', 0, 1, 0, 0)
('mv,nv,mi,ni', 1, 0, 5, 3)
('k[5][3]=max(1+k[4][3] (4),k[5][3] (4))', 4)
('mv,nv,mi,ni', 1, 0, 5, 2)
('k[5][2]=max(1+k[4][2] (3),k[5][2] (3))', 3)
('mv,nv,mi,ni', 1, 0, 5, 1)
('k[5][1]=max(1+k[4][1] (2),k[5][1] (2))', 2)
('mv,nv,mi,ni', 1, 0, 5, 0)
('k[5][0]=max(1+k[4][0] (1),k[5][0] (1))', 1)
('mv,nv,mi,ni', 1, 0, 4, 3)
('k[4][3]=max(1+k[3][3] (3),k[4][3] (3))', 3)
('mv,nv,mi,ni', 1, 0, 4, 2)
('k[4][2]=max(1+k[3][2] (3),k[4][2] (3))', 3)
('mv,nv,mi,ni', 1, 0, 4, 1)
('k[4][1]=max(1+k[3][1] (2),k[4][1] (2))', 2)
('mv,nv,mi,ni', 1, 0, 4, 0)
('k[4][0]=max(1+k[3][0] (1),k[4][0] (1))', 1)
('mv,nv,mi,ni', 1, 0, 3, 3)
('k[3][3]=max(1+k[2][3] (3),k[3][3] (3))', 3)
('mv,nv,mi,ni', 1, 0, 3, 2)
('k[3][2]=max(1+k[2][2] (3),k[3][2] (3))', 3)
('mv,nv,mi,ni', 1, 0, 3, 1)
('k[3][1]=max(1+k[2][1] (2),k[3][1] (2))', 2)
('mv,nv,mi,ni', 1, 0, 3, 0)
('k[3][0]=max(1+k[2][0] (1),k[3][0] (1))', 1)
('mv,nv,mi,ni', 1, 0, 2, 3)
('k[2][3]=max(1+k[1][3] (3),k[2][3] (3))', 3)
('mv,nv,mi,ni', 1, 0, 2, 2)
('k[2][2]=max(1+k[1][2] (3),k[2][2] (3))', 3)
('mv,nv,mi,ni', 1, 0, 2, 1)
('k[2][1]=max(1+k[1][1] (2),k[2][1] (2))', 2)
('mv,nv,mi,ni', 1, 0, 2, 0)
('k[2][0]=max(1+k[1][0] (1),k[2][0] (1))', 1)
('mv,nv,mi,ni', 1, 0, 1, 3)
('k[1][3]=max(1+k[0][3] (2),k[1][3] (2))', 2)
('mv,nv,mi,ni', 1, 0, 1, 2)
('k[1][2]=max(1+k[0][2] (2),k[1][2] (2))', 2)
('mv,nv,mi,ni', 1, 0, 1, 1)
('k[1][1]=max(1+k[0][1] (2),k[1][1] (2))', 2)
('mv,nv,mi,ni', 1, 0, 1, 0)
('k[1][0]=max(1+k[0][0] (1),k[1][0] (1))', 1)
('mv,nv,mi,ni', 1, 0, 0, 3)
('mv,nv,mi,ni', 1, 0, 0, 2)
('mv,nv,mi,ni', 1, 0, 0, 1)
('mv,nv,mi,ni', 1, 0, 0, 0)
('Solution().findMaxForm(strs,5,3) :', 4)
.

Finished tests in 0.015900s.

1 tests, 0 assertions, 0 failures, 0 errors.
[Finished in 1.5s]