data: 6, 0, 3, 5, 7, 8, 4, 1, 2, 9,
size:10
buildFromPoints:
  enter buildFromPoints:
  lower:  0  upper:  10
  new node, node->index:  0
  new node datapoin:  DataPoint(dimensionality=5, index=6, content=6, 6 ... 6, 6, )
  upper - lower > 1
  median:  5
  before nth_element: start, n, end  1 5 10
data: 6, 0, 3, 5, 7, 8, 4, 1, 2, 9,
  after nth_element:
data: 6, 8, 4, 5, 7, 9, 3, 1, 2, 0,
  node->threshold :  6.7082
  _items[median]:  DataPoint(dimensionality=5, index=9, content=9, 9 ... 9, 9, )
  going left:  1 5
    enter buildFromPoints:
    lower:  1  upper:  5
    new node, node->index:  1
    new node datapoin:  DataPoint(dimensionality=5, index=8, content=8, 8 ... 8, 8, )
    upper - lower > 1
    median:  3
    before nth_element: start, n, end  2 3 5
data: 6, 8, 4, 5, 7, 9, 3, 1, 2, 0,
    after nth_element:
data: 6, 8, 7, 5, 4, 9, 3, 1, 2, 0,
    node->threshold :  6.7082
    _items[median]:  DataPoint(dimensionality=5, index=5, content=5, 5 ... 5, 5, )
    going left:  2 3
      enter buildFromPoints:
      lower:  2  upper:  3
      new node, node->index:  2
      new node datapoin:  DataPoint(dimensionality=5, index=7, content=7, 7 ... 7, 7, )
      return node, last line
    going right:  3 5
      enter buildFromPoints:
      lower:  3  upper:  5
      new node, node->index:  3
      new node datapoin:  DataPoint(dimensionality=5, index=5, content=5, 5 ... 5, 5, )
      upper - lower > 1
      median:  4
      before nth_element: start, n, end  4 4 5
data: 6, 8, 7, 5, 4, 9, 3, 1, 2, 0,
      after nth_element:
data: 6, 8, 7, 5, 4, 9, 3, 1, 2, 0,
      node->threshold :  2.23607
      _items[median]:  DataPoint(dimensionality=5, index=4, content=4, 4 ... 4, 4, )
      going left:  4 4
        enter buildFromPoints:
        lower:  4  upper:  4
        return NULL, upper == lower
      going right:  4 5
        enter buildFromPoints:
        lower:  4  upper:  5
        new node, node->index:  4
        new node datapoin:  DataPoint(dimensionality=5, index=4, content=4, 4 ... 4, 4, )
        return node, last line
      return node, last line
    return node, last line
  going right:  5 10
    enter buildFromPoints:
    lower:  5  upper:  10
    new node, node->index:  5
    new node datapoin:  DataPoint(dimensionality=5, index=9, content=9, 9 ... 9, 9, )
    upper - lower > 1
    swap, i != lower, i:  8  lower:  5
    median:  7
    before nth_element: start, n, end  6 7 10
data: 6, 8, 7, 5, 4, 2, 3, 1, 9, 0,
    after nth_element:
data: 6, 8, 7, 5, 4, 2, 3, 1, 0, 9,
    node->threshold :  2.23607
    _items[median]:  DataPoint(dimensionality=5, index=1, content=1, 1 ... 1, 1, )
    going left:  6 7
      enter buildFromPoints:
      lower:  6  upper:  7
      new node, node->index:  6
      new node datapoin:  DataPoint(dimensionality=5, index=3, content=3, 3 ... 3, 3, )
      return node, last line
    going right:  7 10
      enter buildFromPoints:
      lower:  7  upper:  10
      new node, node->index:  7
      new node datapoin:  DataPoint(dimensionality=5, index=1, content=1, 1 ... 1, 1, )
      upper - lower > 1
      median:  8
      before nth_element: start, n, end  8 8 10
data: 6, 8, 7, 5, 4, 2, 3, 1, 0, 9,
      after nth_element:
data: 6, 8, 7, 5, 4, 2, 3, 1, 0, 9,
      node->threshold :  2.23607
      _items[median]:  DataPoint(dimensionality=5, index=0, content=0, 0 ... 0, 0, )
      going left:  8 8
        enter buildFromPoints:
        lower:  8  upper:  8
        return NULL, upper == lower
      going right:  8 10
        enter buildFromPoints:
        lower:  8  upper:  10
        new node, node->index:  8
        new node datapoin:  DataPoint(dimensionality=5, index=0, content=0, 0 ... 0, 0, )
        upper - lower > 1
        median:  9
        before nth_element: start, n, end  9 9 10
data: 6, 8, 7, 5, 4, 2, 3, 1, 0, 9,
        after nth_element:
data: 6, 8, 7, 5, 4, 2, 3, 1, 0, 9,
        node->threshold :  20.1246
        _items[median]:  DataPoint(dimensionality=5, index=9, content=9, 9 ... 9, 9, )
        going left:  9 9
          enter buildFromPoints:
          lower:  9  upper:  9
          return NULL, upper == lower
        going right:  9 10
          enter buildFromPoints:
          lower:  9  upper:  10
          new node, node->index:  9
          new node datapoin:  DataPoint(dimensionality=5, index=9, content=9, 9 ... 9, 9, )
          return node, last line
        return node, last line
      return node, last line
    return node, last line
  return node, last line
[Finished in 2.402s]

data: 6, 0, 3, 5, 7, 8, 4, 1, 2, 9, 
create tree
by index:
        0
   1               5
2     3        6      7
    -   4           -     8
                        -   9


in mac
        6
   8               2
7     5        3      1
    -   4           -     0
                        -   9

        0.3
   2.3             4.1
1     3.1       1      1.1
    -   1           -     1.9
                        -   9

in linux:
        9
    7                 2
8      6         3          1
     -   5               -     0
                             -   4
